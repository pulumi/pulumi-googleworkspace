// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Googleworkspace
{
    public static class GetGroupMember
    {
        public static Task<GetGroupMemberResult> InvokeAsync(GetGroupMemberArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetGroupMemberResult>("googleworkspace:index/getGroupMember:getGroupMember", args ?? new GetGroupMemberArgs(), options.WithVersion());
    }


    public sealed class GetGroupMemberArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The email must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes.
        /// </summary>
        [Input("email")]
        public string? Email { get; set; }

        /// <summary>
        /// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
        /// </summary>
        [Input("groupId", required: true)]
        public string GroupId { get; set; } = null!;

        /// <summary>
        /// The unique ID of the group member. A member id can be used as a member request URI's memberKey.
        /// </summary>
        [Input("memberId")]
        public string? MemberId { get; set; }

        public GetGroupMemberArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetGroupMemberResult
    {
        /// <summary>
        /// Defines mail delivery preferences of member. Acceptable values are:`ALL_MAIL`: All messages, delivered as soon as they arrive. `DAILY`: No more than one message a day. `DIGEST`: Up to 25 messages bundled into a single message. `DISABLED`: Remove subscription. `NONE`: No messages.
        /// </summary>
        public readonly string DeliverySettings;
        /// <summary>
        /// The member's email address. A member can be a user or another group. This property is required when adding a member to a group. The email must be unique and cannot be an alias of another group. If the email address is changed, the API automatically reflects the email address changes.
        /// </summary>
        public readonly string? Email;
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.
        /// </summary>
        public readonly string GroupId;
        /// <summary>
        /// The ID of this resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The unique ID of the group member. A member id can be used as a member request URI's memberKey.
        /// </summary>
        public readonly string? MemberId;
        /// <summary>
        /// The member's role in a group. The API returns an error for cycles in group memberships. For example, if group1 is a member of group2, group2 cannot be a member of group1. Acceptable values are: `MANAGER`: This role is only available if the Google Groups for Business is enabled using the Admin Console. A `MANAGER` role can do everything done by an `OWNER` role except make a member an `OWNER` or delete the group. A group can have multiple `MANAGER` members. `MEMBER`: This role can subscribe to a group, view discussion archives, and view the group's membership list. `OWNER`: This role can send messages to the group, add or remove members, change member roles, change group's settings, and delete the group. An OWNER must be a member of the group. A group can have more than one OWNER.
        /// </summary>
        public readonly string Role;
        /// <summary>
        /// Status of member.
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// The type of group member. Acceptable values are: `CUSTOMER`: The member represents all users in a domain. An email address is not returned and the ID returned is the customer ID. `GROUP`: The member is another group. `USER`: The member is a user.
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetGroupMemberResult(
            string deliverySettings,

            string? email,

            string etag,

            string groupId,

            string id,

            string? memberId,

            string role,

            string status,

            string type)
        {
            DeliverySettings = deliverySettings;
            Email = email;
            Etag = etag;
            GroupId = groupId;
            Id = id;
            MemberId = memberId;
            Role = role;
            Status = status;
            Type = type;
        }
    }
}
