// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Googleworkspace
{
    public static class GetRole
    {
        public static Task<GetRoleResult> InvokeAsync(GetRoleArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetRoleResult>("googleworkspace:index/getRole:getRole", args ?? new GetRoleArgs(), options.WithVersion());
    }


    public sealed class GetRoleArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the role.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetRoleArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetRoleResult
    {
        /// <summary>
        /// A short description of the role.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// ETag of the resource.
        /// </summary>
        public readonly string Etag;
        /// <summary>
        /// ID of the role.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Returns true if the role is a super admin role.
        /// </summary>
        public readonly bool IsSuperAdminRole;
        /// <summary>
        /// Returns true if this is a pre-defined system role.
        /// </summary>
        public readonly bool IsSystemRole;
        /// <summary>
        /// Name of the role.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The set of privileges that are granted to this role.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRolePrivilegeResult> Privileges;

        [OutputConstructor]
        private GetRoleResult(
            string description,

            string etag,

            string id,

            bool isSuperAdminRole,

            bool isSystemRole,

            string name,

            ImmutableArray<Outputs.GetRolePrivilegeResult> privileges)
        {
            Description = description;
            Etag = etag;
            Id = id;
            IsSuperAdminRole = isSuperAdminRole;
            IsSystemRole = isSystemRole;
            Name = name;
            Privileges = privileges;
        }
    }
}
