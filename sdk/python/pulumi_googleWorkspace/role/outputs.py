# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'RolePrivilege',
]

@pulumi.output_type
class RolePrivilege(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "privilegeName":
            suggest = "privilege_name"
        elif key == "serviceId":
            suggest = "service_id"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in RolePrivilege. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        RolePrivilege.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        RolePrivilege.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 privilege_name: str,
                 service_id: str):
        """
        :param str privilege_name: The name of the privilege.
        :param str service_id: The obfuscated ID of the service this privilege is for.
        """
        pulumi.set(__self__, "privilege_name", privilege_name)
        pulumi.set(__self__, "service_id", service_id)

    @property
    @pulumi.getter(name="privilegeName")
    def privilege_name(self) -> str:
        """
        The name of the privilege.
        """
        return pulumi.get(self, "privilege_name")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        """
        The obfuscated ID of the service this privilege is for.
        """
        return pulumi.get(self, "service_id")


