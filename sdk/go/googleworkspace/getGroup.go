// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package googleWorkspace

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetGroup(ctx *pulumi.Context, args *GetGroupArgs, opts ...pulumi.InvokeOption) (*GetGroupResult, error) {
	var rv GetGroupResult
	err := ctx.Invoke("googleworkspace:index/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type GetGroupArgs struct {
	// The group's email address. If your account has multiple domains,select the appropriate domain for the email address. The email must be unique.
	Email *string `pulumi:"email"`
	// The unique ID of a group. A group id can be used as a group request URI's groupKey.
	Id *string `pulumi:"id"`
}

// A collection of values returned by getGroup.
type GetGroupResult struct {
	// Value is true if this group was created by an administrator rather than a user.
	AdminCreated bool `pulumi:"adminCreated"`
	// asps.list of group's email addresses.
	Aliases []string `pulumi:"aliases"`
	// An extended description to help users determine the purpose of a group.For example, you can include information about who should join the group,the types of messages to send to the group, links to FAQs about the group, or related groups.
	Description string `pulumi:"description"`
	// The number of users that are direct members of the group.If a group is a member (child) of this group (the parent),members of the child group are not counted in the directMembersCount property of the parent group.
	DirectMembersCount int `pulumi:"directMembersCount"`
	// The group's email address. If your account has multiple domains,select the appropriate domain for the email address. The email must be unique.
	Email *string `pulumi:"email"`
	// ETag of the resource.
	Etag string `pulumi:"etag"`
	// The unique ID of a group. A group id can be used as a group request URI's groupKey.
	Id *string `pulumi:"id"`
	// The group's display name.
	Name string `pulumi:"name"`
	// asps.list of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group.
	NonEditableAliases []string `pulumi:"nonEditableAliases"`
}

func GetGroupOutput(ctx *pulumi.Context, args GetGroupOutputArgs, opts ...pulumi.InvokeOption) GetGroupResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetGroupResult, error) {
			args := v.(GetGroupArgs)
			r, err := GetGroup(ctx, &args, opts...)
			return *r, err
		}).(GetGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type GetGroupOutputArgs struct {
	// The group's email address. If your account has multiple domains,select the appropriate domain for the email address. The email must be unique.
	Email pulumi.StringPtrInput `pulumi:"email"`
	// The unique ID of a group. A group id can be used as a group request URI's groupKey.
	Id pulumi.StringPtrInput `pulumi:"id"`
}

func (GetGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type GetGroupResultOutput struct{ *pulumi.OutputState }

func (GetGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGroupResult)(nil)).Elem()
}

func (o GetGroupResultOutput) ToGetGroupResultOutput() GetGroupResultOutput {
	return o
}

func (o GetGroupResultOutput) ToGetGroupResultOutputWithContext(ctx context.Context) GetGroupResultOutput {
	return o
}

// Value is true if this group was created by an administrator rather than a user.
func (o GetGroupResultOutput) AdminCreated() pulumi.BoolOutput {
	return o.ApplyT(func(v GetGroupResult) bool { return v.AdminCreated }).(pulumi.BoolOutput)
}

// asps.list of group's email addresses.
func (o GetGroupResultOutput) Aliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGroupResult) []string { return v.Aliases }).(pulumi.StringArrayOutput)
}

// An extended description to help users determine the purpose of a group.For example, you can include information about who should join the group,the types of messages to send to the group, links to FAQs about the group, or related groups.
func (o GetGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The number of users that are direct members of the group.If a group is a member (child) of this group (the parent),members of the child group are not counted in the directMembersCount property of the parent group.
func (o GetGroupResultOutput) DirectMembersCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetGroupResult) int { return v.DirectMembersCount }).(pulumi.IntOutput)
}

// The group's email address. If your account has multiple domains,select the appropriate domain for the email address. The email must be unique.
func (o GetGroupResultOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupResult) *string { return v.Email }).(pulumi.StringPtrOutput)
}

// ETag of the resource.
func (o GetGroupResultOutput) Etag() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Etag }).(pulumi.StringOutput)
}

// The unique ID of a group. A group id can be used as a group request URI's groupKey.
func (o GetGroupResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetGroupResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The group's display name.
func (o GetGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// asps.list of the group's non-editable alias email addresses that are outside of the account's primary domain or subdomains. These are functioning email addresses used by the group.
func (o GetGroupResultOutput) NonEditableAliases() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetGroupResult) []string { return v.NonEditableAliases }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGroupResultOutput{})
}
