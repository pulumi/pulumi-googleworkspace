// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package role

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type RolePrivilege struct {
	// The name of the privilege.
	PrivilegeName string `pulumi:"privilegeName"`
	// The obfuscated ID of the service this privilege is for.
	ServiceId string `pulumi:"serviceId"`
}

// RolePrivilegeInput is an input type that accepts RolePrivilegeArgs and RolePrivilegeOutput values.
// You can construct a concrete instance of `RolePrivilegeInput` via:
//
//          RolePrivilegeArgs{...}
type RolePrivilegeInput interface {
	pulumi.Input

	ToRolePrivilegeOutput() RolePrivilegeOutput
	ToRolePrivilegeOutputWithContext(context.Context) RolePrivilegeOutput
}

type RolePrivilegeArgs struct {
	// The name of the privilege.
	PrivilegeName pulumi.StringInput `pulumi:"privilegeName"`
	// The obfuscated ID of the service this privilege is for.
	ServiceId pulumi.StringInput `pulumi:"serviceId"`
}

func (RolePrivilegeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePrivilege)(nil)).Elem()
}

func (i RolePrivilegeArgs) ToRolePrivilegeOutput() RolePrivilegeOutput {
	return i.ToRolePrivilegeOutputWithContext(context.Background())
}

func (i RolePrivilegeArgs) ToRolePrivilegeOutputWithContext(ctx context.Context) RolePrivilegeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePrivilegeOutput)
}

// RolePrivilegeArrayInput is an input type that accepts RolePrivilegeArray and RolePrivilegeArrayOutput values.
// You can construct a concrete instance of `RolePrivilegeArrayInput` via:
//
//          RolePrivilegeArray{ RolePrivilegeArgs{...} }
type RolePrivilegeArrayInput interface {
	pulumi.Input

	ToRolePrivilegeArrayOutput() RolePrivilegeArrayOutput
	ToRolePrivilegeArrayOutputWithContext(context.Context) RolePrivilegeArrayOutput
}

type RolePrivilegeArray []RolePrivilegeInput

func (RolePrivilegeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePrivilege)(nil)).Elem()
}

func (i RolePrivilegeArray) ToRolePrivilegeArrayOutput() RolePrivilegeArrayOutput {
	return i.ToRolePrivilegeArrayOutputWithContext(context.Background())
}

func (i RolePrivilegeArray) ToRolePrivilegeArrayOutputWithContext(ctx context.Context) RolePrivilegeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(RolePrivilegeArrayOutput)
}

type RolePrivilegeOutput struct{ *pulumi.OutputState }

func (RolePrivilegeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*RolePrivilege)(nil)).Elem()
}

func (o RolePrivilegeOutput) ToRolePrivilegeOutput() RolePrivilegeOutput {
	return o
}

func (o RolePrivilegeOutput) ToRolePrivilegeOutputWithContext(ctx context.Context) RolePrivilegeOutput {
	return o
}

// The name of the privilege.
func (o RolePrivilegeOutput) PrivilegeName() pulumi.StringOutput {
	return o.ApplyT(func(v RolePrivilege) string { return v.PrivilegeName }).(pulumi.StringOutput)
}

// The obfuscated ID of the service this privilege is for.
func (o RolePrivilegeOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v RolePrivilege) string { return v.ServiceId }).(pulumi.StringOutput)
}

type RolePrivilegeArrayOutput struct{ *pulumi.OutputState }

func (RolePrivilegeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]RolePrivilege)(nil)).Elem()
}

func (o RolePrivilegeArrayOutput) ToRolePrivilegeArrayOutput() RolePrivilegeArrayOutput {
	return o
}

func (o RolePrivilegeArrayOutput) ToRolePrivilegeArrayOutputWithContext(ctx context.Context) RolePrivilegeArrayOutput {
	return o
}

func (o RolePrivilegeArrayOutput) Index(i pulumi.IntInput) RolePrivilegeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) RolePrivilege {
		return vs[0].([]RolePrivilege)[vs[1].(int)]
	}).(RolePrivilegeOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*RolePrivilegeInput)(nil)).Elem(), RolePrivilegeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*RolePrivilegeArrayInput)(nil)).Elem(), RolePrivilegeArray{})
	pulumi.RegisterOutputType(RolePrivilegeOutput{})
	pulumi.RegisterOutputType(RolePrivilegeArrayOutput{})
}
