// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * User resource manages Google Workspace Users. User resides under the `https://www.googleapis.com/auth/admin.directory.user` client scope.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as googleWorkspace from "@pulumi/googleWorkspace";
 *
 * const birthday = new googleWorkspace.Schema("birthday", {
 *     schemaName: "birthday",
 *     fields: [
 *         {
 *             fieldName: "birthday",
 *             fieldType: "DATE",
 *         },
 *         {
 *             fieldName: "favorite-numbers",
 *             fieldType: "INT64",
 *             multiValued: true,
 *             numericIndexingSpec: {
 *                 minValue: 1,
 *                 maxValue: 100,
 *             },
 *         },
 *     ],
 * });
 * const dwight = new googleWorkspace.User("dwight", {
 *     primaryEmail: "dwight.schrute@example.com",
 *     password: "34819d7beeabb9260a5c854bc85b3e44",
 *     hashFunction: "MD5",
 *     name: {
 *         familyName: "Schrute",
 *         givenName: "Dwight",
 *     },
 *     aliases: ["assistant_to_regional_manager@example.com"],
 *     emails: [{
 *         address: "dwight.schrute.dunder.mifflin@example.com",
 *         type: "work",
 *     }],
 *     relations: [{
 *         type: "assistant",
 *         value: "Michael Scott",
 *     }],
 *     addresses: [{
 *         country: "USA",
 *         countryCode: "US",
 *         locality: "Scranton",
 *         poBox: "123",
 *         postalCode: "18508",
 *         region: "PA",
 *         streetAddress: "123 Dunder Mifflin Pkwy",
 *         type: "work",
 *     }],
 *     organizations: [{
 *         department: "sales",
 *         location: "Scranton",
 *         name: "Dunder Mifflin",
 *         primary: true,
 *         symbol: "DUMI",
 *         title: "member",
 *         type: "work",
 *     }],
 *     phones: [
 *         {
 *             type: "home",
 *             value: "555-123-7890",
 *         },
 *         {
 *             type: "work",
 *             primary: true,
 *             value: "555-123-0987",
 *         },
 *     ],
 *     keywords: [{
 *         type: "occupation",
 *         value: "salesperson",
 *     }],
 *     customSchemas: [{
 *         schemaName: birthday.schemaName,
 *         schemaValues: {
 *             birthday: JSON.stringify("1970-01-20"),
 *             "favorite-numbers": JSON.stringify([
 *                 1,
 *                 2,
 *                 3,
 *             ]),
 *         },
 *     }],
 *     recoveryEmail: "dwightkschrute@example.com",
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 *  $ pulumi import googleworkspace:index/user:User dwight 123456789012345678901
 * ```
 */
export class User extends pulumi.CustomResource {
    /**
     * Get an existing User resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: UserState, opts?: pulumi.CustomResourceOptions): User {
        return new User(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'googleworkspace:index/user:User';

    /**
     * Returns true if the given object is an instance of User.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is User {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === User.__pulumiType;
    }

    /**
     * A list of the user's addresses. The maximum allowed data size is 10Kb.
     */
    public readonly addresses!: pulumi.Output<outputs.UserAddress[] | undefined>;
    /**
     * This property is true if the user has completed an initial login and accepted the Terms of Service agreement.
     */
    public /*out*/ readonly agreedToTerms!: pulumi.Output<boolean>;
    /**
     * asps.list of the user's alias email addresses.
     */
    public readonly aliases!: pulumi.Output<string[] | undefined>;
    /**
     * Indicates if user is archived.
     */
    public readonly archived!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates if the user is forced to change their password at next login. This setting doesn't apply when the user signs in via a third-party identity provider.
     */
    public readonly changePasswordAtNextLogin!: pulumi.Output<boolean | undefined>;
    /**
     * The time the user's account was created. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
     */
    public /*out*/ readonly creationTime!: pulumi.Output<string>;
    /**
     * Custom fields of the user.
     */
    public readonly customSchemas!: pulumi.Output<outputs.UserCustomSchema[] | undefined>;
    /**
     * The customer ID to retrieve all account users. You can use the alias myCustomer to represent your account's customerId. As a reseller administrator, you can use the resold customer account's customerId. To get a customerId, use the account's primary domain in the domain parameter of a users.list request.
     */
    public /*out*/ readonly customerId!: pulumi.Output<string>;
    /**
     * The time the user's account was deleted. The value is in ISO 8601 date and time format The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example 2010-04-05T17:30:04+01:00.
     */
    public /*out*/ readonly deletionTime!: pulumi.Output<string>;
    /**
     * A list of the user's email addresses. The maximum allowed data size is 10Kb.
     */
    public readonly emails!: pulumi.Output<outputs.UserEmail[]>;
    /**
     * ETag of the resource.
     */
    public /*out*/ readonly etag!: pulumi.Output<string>;
    /**
     * A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size is 2Kb.
     */
    public readonly externalIds!: pulumi.Output<outputs.UserExternalId[] | undefined>;
    /**
     * Stores the hash format of the password property. We recommend sending the password property value as a base 16 bit hexadecimal-encoded hash value. Set the hashFunction values as either the SHA-1, MD5, or crypt hash format.
     */
    public readonly hashFunction!: pulumi.Output<string | undefined>;
    /**
     * The unique ID for the user.
     */
    public /*out*/ readonly id!: pulumi.Output<string>;
    /**
     * The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size is 2Kb.
     */
    public readonly ims!: pulumi.Output<outputs.UserIm[] | undefined>;
    /**
     * Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. Defaults to `true`.
     */
    public readonly includeInGlobalAddressList!: pulumi.Output<boolean | undefined>;
    /**
     * If true, the user's IP address is added to the allow list.
     */
    public readonly ipAllowlist!: pulumi.Output<boolean | undefined>;
    /**
     * Indicates a user with super admininistrator privileges.
     */
    public readonly isAdmin!: pulumi.Output<boolean>;
    /**
     * Indicates if the user is a delegated administrator.
     */
    public /*out*/ readonly isDelegatedAdmin!: pulumi.Output<boolean>;
    /**
     * Is 2-step verification enforced.
     */
    public /*out*/ readonly isEnforcedIn2StepVerification!: pulumi.Output<boolean>;
    /**
     * Is enrolled in 2-step verification.
     */
    public /*out*/ readonly isEnrolledIn2StepVerification!: pulumi.Output<boolean>;
    /**
     * Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license.
     */
    public /*out*/ readonly isMailboxSetup!: pulumi.Output<boolean>;
    /**
     * A list of the user's keywords. The maximum allowed data size is 1Kb.
     */
    public readonly keywords!: pulumi.Output<outputs.UserKeyword[] | undefined>;
    /**
     * A list of the user's languages. The maximum allowed data size is 1Kb.
     */
    public readonly languages!: pulumi.Output<outputs.UserLanguage[] | undefined>;
    /**
     * The last time the user logged into the user's account. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
     */
    public /*out*/ readonly lastLoginTime!: pulumi.Output<string>;
    /**
     * A list of the user's locations. The maximum allowed data size is 10Kb.
     */
    public readonly locations!: pulumi.Output<outputs.UserLocation[] | undefined>;
    /**
     * Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
     */
    public readonly name!: pulumi.Output<outputs.UserName>;
    /**
     * asps.list of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain.
     */
    public /*out*/ readonly nonEditableAliases!: pulumi.Output<string[]>;
    /**
     * The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (/).
     */
    public readonly orgUnitPath!: pulumi.Output<string>;
    /**
     * A list of organizations the user belongs to. The maximum allowed data size is 10Kb.
     */
    public readonly organizations!: pulumi.Output<outputs.UserOrganization[] | undefined>;
    /**
     * Stores the password for the user account. A password can contain any combination of ASCII characters. A minimum of 8 characters is required. The maximum length is 100 characters. As the API does not return the value of password, this field is write-only, and the value stored in the state will be what is provided in the configuration. The field is required on create and will be empty on import.
     */
    public readonly password!: pulumi.Output<string | undefined>;
    /**
     * Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
     */
    public readonly phones!: pulumi.Output<outputs.UserPhone[] | undefined>;
    /**
     * A list of POSIX account information for the user.
     */
    public readonly posixAccounts!: pulumi.Output<outputs.UserPosixAccount[] | undefined>;
    /**
     * The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
     */
    public readonly primaryEmail!: pulumi.Output<string>;
    /**
     * Recovery email of the user.
     */
    public readonly recoveryEmail!: pulumi.Output<string | undefined>;
    /**
     * Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212.
     */
    public readonly recoveryPhone!: pulumi.Output<string | undefined>;
    /**
     * A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb.
     */
    public readonly relations!: pulumi.Output<outputs.UserRelation[] | undefined>;
    /**
     * A list of SSH public keys. The maximum allowed data size is 10Kb.
     */
    public readonly sshPublicKeys!: pulumi.Output<outputs.UserSshPublicKey[] | undefined>;
    /**
     * Indicates if user is suspended.
     */
    public readonly suspended!: pulumi.Output<boolean | undefined>;
    /**
     * Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the suspended property is true.
     */
    public /*out*/ readonly suspensionReason!: pulumi.Output<string>;
    /**
     * ETag of the user's photo
     */
    public /*out*/ readonly thumbnailPhotoEtag!: pulumi.Output<string>;
    /**
     * Photo Url of the user.
     */
    public /*out*/ readonly thumbnailPhotoUrl!: pulumi.Output<string>;
    /**
     * A list of the user's websites. The maximum allowed data size is 2Kb.
     */
    public readonly websites!: pulumi.Output<outputs.UserWebsite[] | undefined>;

    /**
     * Create a User resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: UserArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: UserArgs | UserState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as UserState | undefined;
            inputs["addresses"] = state ? state.addresses : undefined;
            inputs["agreedToTerms"] = state ? state.agreedToTerms : undefined;
            inputs["aliases"] = state ? state.aliases : undefined;
            inputs["archived"] = state ? state.archived : undefined;
            inputs["changePasswordAtNextLogin"] = state ? state.changePasswordAtNextLogin : undefined;
            inputs["creationTime"] = state ? state.creationTime : undefined;
            inputs["customSchemas"] = state ? state.customSchemas : undefined;
            inputs["customerId"] = state ? state.customerId : undefined;
            inputs["deletionTime"] = state ? state.deletionTime : undefined;
            inputs["emails"] = state ? state.emails : undefined;
            inputs["etag"] = state ? state.etag : undefined;
            inputs["externalIds"] = state ? state.externalIds : undefined;
            inputs["hashFunction"] = state ? state.hashFunction : undefined;
            inputs["id"] = state ? state.id : undefined;
            inputs["ims"] = state ? state.ims : undefined;
            inputs["includeInGlobalAddressList"] = state ? state.includeInGlobalAddressList : undefined;
            inputs["ipAllowlist"] = state ? state.ipAllowlist : undefined;
            inputs["isAdmin"] = state ? state.isAdmin : undefined;
            inputs["isDelegatedAdmin"] = state ? state.isDelegatedAdmin : undefined;
            inputs["isEnforcedIn2StepVerification"] = state ? state.isEnforcedIn2StepVerification : undefined;
            inputs["isEnrolledIn2StepVerification"] = state ? state.isEnrolledIn2StepVerification : undefined;
            inputs["isMailboxSetup"] = state ? state.isMailboxSetup : undefined;
            inputs["keywords"] = state ? state.keywords : undefined;
            inputs["languages"] = state ? state.languages : undefined;
            inputs["lastLoginTime"] = state ? state.lastLoginTime : undefined;
            inputs["locations"] = state ? state.locations : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["nonEditableAliases"] = state ? state.nonEditableAliases : undefined;
            inputs["orgUnitPath"] = state ? state.orgUnitPath : undefined;
            inputs["organizations"] = state ? state.organizations : undefined;
            inputs["password"] = state ? state.password : undefined;
            inputs["phones"] = state ? state.phones : undefined;
            inputs["posixAccounts"] = state ? state.posixAccounts : undefined;
            inputs["primaryEmail"] = state ? state.primaryEmail : undefined;
            inputs["recoveryEmail"] = state ? state.recoveryEmail : undefined;
            inputs["recoveryPhone"] = state ? state.recoveryPhone : undefined;
            inputs["relations"] = state ? state.relations : undefined;
            inputs["sshPublicKeys"] = state ? state.sshPublicKeys : undefined;
            inputs["suspended"] = state ? state.suspended : undefined;
            inputs["suspensionReason"] = state ? state.suspensionReason : undefined;
            inputs["thumbnailPhotoEtag"] = state ? state.thumbnailPhotoEtag : undefined;
            inputs["thumbnailPhotoUrl"] = state ? state.thumbnailPhotoUrl : undefined;
            inputs["websites"] = state ? state.websites : undefined;
        } else {
            const args = argsOrState as UserArgs | undefined;
            if ((!args || args.primaryEmail === undefined) && !opts.urn) {
                throw new Error("Missing required property 'primaryEmail'");
            }
            inputs["addresses"] = args ? args.addresses : undefined;
            inputs["aliases"] = args ? args.aliases : undefined;
            inputs["archived"] = args ? args.archived : undefined;
            inputs["changePasswordAtNextLogin"] = args ? args.changePasswordAtNextLogin : undefined;
            inputs["customSchemas"] = args ? args.customSchemas : undefined;
            inputs["emails"] = args ? args.emails : undefined;
            inputs["externalIds"] = args ? args.externalIds : undefined;
            inputs["hashFunction"] = args ? args.hashFunction : undefined;
            inputs["ims"] = args ? args.ims : undefined;
            inputs["includeInGlobalAddressList"] = args ? args.includeInGlobalAddressList : undefined;
            inputs["ipAllowlist"] = args ? args.ipAllowlist : undefined;
            inputs["isAdmin"] = args ? args.isAdmin : undefined;
            inputs["keywords"] = args ? args.keywords : undefined;
            inputs["languages"] = args ? args.languages : undefined;
            inputs["locations"] = args ? args.locations : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["orgUnitPath"] = args ? args.orgUnitPath : undefined;
            inputs["organizations"] = args ? args.organizations : undefined;
            inputs["password"] = args ? args.password : undefined;
            inputs["phones"] = args ? args.phones : undefined;
            inputs["posixAccounts"] = args ? args.posixAccounts : undefined;
            inputs["primaryEmail"] = args ? args.primaryEmail : undefined;
            inputs["recoveryEmail"] = args ? args.recoveryEmail : undefined;
            inputs["recoveryPhone"] = args ? args.recoveryPhone : undefined;
            inputs["relations"] = args ? args.relations : undefined;
            inputs["sshPublicKeys"] = args ? args.sshPublicKeys : undefined;
            inputs["suspended"] = args ? args.suspended : undefined;
            inputs["websites"] = args ? args.websites : undefined;
            inputs["agreedToTerms"] = undefined /*out*/;
            inputs["creationTime"] = undefined /*out*/;
            inputs["customerId"] = undefined /*out*/;
            inputs["deletionTime"] = undefined /*out*/;
            inputs["etag"] = undefined /*out*/;
            inputs["id"] = undefined /*out*/;
            inputs["isDelegatedAdmin"] = undefined /*out*/;
            inputs["isEnforcedIn2StepVerification"] = undefined /*out*/;
            inputs["isEnrolledIn2StepVerification"] = undefined /*out*/;
            inputs["isMailboxSetup"] = undefined /*out*/;
            inputs["lastLoginTime"] = undefined /*out*/;
            inputs["nonEditableAliases"] = undefined /*out*/;
            inputs["suspensionReason"] = undefined /*out*/;
            inputs["thumbnailPhotoEtag"] = undefined /*out*/;
            inputs["thumbnailPhotoUrl"] = undefined /*out*/;
        }
        if (!opts.version) {
            opts = pulumi.mergeOptions(opts, { version: utilities.getVersion()});
        }
        super(User.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering User resources.
 */
export interface UserState {
    /**
     * A list of the user's addresses. The maximum allowed data size is 10Kb.
     */
    addresses?: pulumi.Input<pulumi.Input<inputs.UserAddress>[]>;
    /**
     * This property is true if the user has completed an initial login and accepted the Terms of Service agreement.
     */
    agreedToTerms?: pulumi.Input<boolean>;
    /**
     * asps.list of the user's alias email addresses.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates if user is archived.
     */
    archived?: pulumi.Input<boolean>;
    /**
     * Indicates if the user is forced to change their password at next login. This setting doesn't apply when the user signs in via a third-party identity provider.
     */
    changePasswordAtNextLogin?: pulumi.Input<boolean>;
    /**
     * The time the user's account was created. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
     */
    creationTime?: pulumi.Input<string>;
    /**
     * Custom fields of the user.
     */
    customSchemas?: pulumi.Input<pulumi.Input<inputs.UserCustomSchema>[]>;
    /**
     * The customer ID to retrieve all account users. You can use the alias myCustomer to represent your account's customerId. As a reseller administrator, you can use the resold customer account's customerId. To get a customerId, use the account's primary domain in the domain parameter of a users.list request.
     */
    customerId?: pulumi.Input<string>;
    /**
     * The time the user's account was deleted. The value is in ISO 8601 date and time format The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example 2010-04-05T17:30:04+01:00.
     */
    deletionTime?: pulumi.Input<string>;
    /**
     * A list of the user's email addresses. The maximum allowed data size is 10Kb.
     */
    emails?: pulumi.Input<pulumi.Input<inputs.UserEmail>[]>;
    /**
     * ETag of the resource.
     */
    etag?: pulumi.Input<string>;
    /**
     * A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size is 2Kb.
     */
    externalIds?: pulumi.Input<pulumi.Input<inputs.UserExternalId>[]>;
    /**
     * Stores the hash format of the password property. We recommend sending the password property value as a base 16 bit hexadecimal-encoded hash value. Set the hashFunction values as either the SHA-1, MD5, or crypt hash format.
     */
    hashFunction?: pulumi.Input<string>;
    /**
     * The unique ID for the user.
     */
    id?: pulumi.Input<string>;
    /**
     * The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size is 2Kb.
     */
    ims?: pulumi.Input<pulumi.Input<inputs.UserIm>[]>;
    /**
     * Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. Defaults to `true`.
     */
    includeInGlobalAddressList?: pulumi.Input<boolean>;
    /**
     * If true, the user's IP address is added to the allow list.
     */
    ipAllowlist?: pulumi.Input<boolean>;
    /**
     * Indicates a user with super admininistrator privileges.
     */
    isAdmin?: pulumi.Input<boolean>;
    /**
     * Indicates if the user is a delegated administrator.
     */
    isDelegatedAdmin?: pulumi.Input<boolean>;
    /**
     * Is 2-step verification enforced.
     */
    isEnforcedIn2StepVerification?: pulumi.Input<boolean>;
    /**
     * Is enrolled in 2-step verification.
     */
    isEnrolledIn2StepVerification?: pulumi.Input<boolean>;
    /**
     * Indicates if the user's Google mailbox is created. This property is only applicable if the user has been assigned a Gmail license.
     */
    isMailboxSetup?: pulumi.Input<boolean>;
    /**
     * A list of the user's keywords. The maximum allowed data size is 1Kb.
     */
    keywords?: pulumi.Input<pulumi.Input<inputs.UserKeyword>[]>;
    /**
     * A list of the user's languages. The maximum allowed data size is 1Kb.
     */
    languages?: pulumi.Input<pulumi.Input<inputs.UserLanguage>[]>;
    /**
     * The last time the user logged into the user's account. The value is in ISO 8601 date and time format. The time is the complete date plus hours, minutes, and seconds in the form YYYY-MM-DDThh:mm:ssTZD. For example, 2010-04-05T17:30:04+01:00.
     */
    lastLoginTime?: pulumi.Input<string>;
    /**
     * A list of the user's locations. The maximum allowed data size is 10Kb.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.UserLocation>[]>;
    /**
     * Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
     */
    name?: pulumi.Input<inputs.UserName>;
    /**
     * asps.list of the user's non-editable alias email addresses. These are typically outside the account's primary domain or sub-domain.
     */
    nonEditableAliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (/).
     */
    orgUnitPath?: pulumi.Input<string>;
    /**
     * A list of organizations the user belongs to. The maximum allowed data size is 10Kb.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.UserOrganization>[]>;
    /**
     * Stores the password for the user account. A password can contain any combination of ASCII characters. A minimum of 8 characters is required. The maximum length is 100 characters. As the API does not return the value of password, this field is write-only, and the value stored in the state will be what is provided in the configuration. The field is required on create and will be empty on import.
     */
    password?: pulumi.Input<string>;
    /**
     * Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
     */
    phones?: pulumi.Input<pulumi.Input<inputs.UserPhone>[]>;
    /**
     * A list of POSIX account information for the user.
     */
    posixAccounts?: pulumi.Input<pulumi.Input<inputs.UserPosixAccount>[]>;
    /**
     * The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
     */
    primaryEmail?: pulumi.Input<string>;
    /**
     * Recovery email of the user.
     */
    recoveryEmail?: pulumi.Input<string>;
    /**
     * Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212.
     */
    recoveryPhone?: pulumi.Input<string>;
    /**
     * A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb.
     */
    relations?: pulumi.Input<pulumi.Input<inputs.UserRelation>[]>;
    /**
     * A list of SSH public keys. The maximum allowed data size is 10Kb.
     */
    sshPublicKeys?: pulumi.Input<pulumi.Input<inputs.UserSshPublicKey>[]>;
    /**
     * Indicates if user is suspended.
     */
    suspended?: pulumi.Input<boolean>;
    /**
     * Has the reason a user account is suspended either by the administrator or by Google at the time of suspension. The property is returned only if the suspended property is true.
     */
    suspensionReason?: pulumi.Input<string>;
    /**
     * ETag of the user's photo
     */
    thumbnailPhotoEtag?: pulumi.Input<string>;
    /**
     * Photo Url of the user.
     */
    thumbnailPhotoUrl?: pulumi.Input<string>;
    /**
     * A list of the user's websites. The maximum allowed data size is 2Kb.
     */
    websites?: pulumi.Input<pulumi.Input<inputs.UserWebsite>[]>;
}

/**
 * The set of arguments for constructing a User resource.
 */
export interface UserArgs {
    /**
     * A list of the user's addresses. The maximum allowed data size is 10Kb.
     */
    addresses?: pulumi.Input<pulumi.Input<inputs.UserAddress>[]>;
    /**
     * asps.list of the user's alias email addresses.
     */
    aliases?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Indicates if user is archived.
     */
    archived?: pulumi.Input<boolean>;
    /**
     * Indicates if the user is forced to change their password at next login. This setting doesn't apply when the user signs in via a third-party identity provider.
     */
    changePasswordAtNextLogin?: pulumi.Input<boolean>;
    /**
     * Custom fields of the user.
     */
    customSchemas?: pulumi.Input<pulumi.Input<inputs.UserCustomSchema>[]>;
    /**
     * A list of the user's email addresses. The maximum allowed data size is 10Kb.
     */
    emails?: pulumi.Input<pulumi.Input<inputs.UserEmail>[]>;
    /**
     * A list of external IDs for the user, such as an employee or network ID. The maximum allowed data size is 2Kb.
     */
    externalIds?: pulumi.Input<pulumi.Input<inputs.UserExternalId>[]>;
    /**
     * Stores the hash format of the password property. We recommend sending the password property value as a base 16 bit hexadecimal-encoded hash value. Set the hashFunction values as either the SHA-1, MD5, or crypt hash format.
     */
    hashFunction?: pulumi.Input<string>;
    /**
     * The user's Instant Messenger (IM) accounts. A user account can have multiple ims properties. But, only one of these ims properties can be the primary IM contact. The maximum allowed data size is 2Kb.
     */
    ims?: pulumi.Input<pulumi.Input<inputs.UserIm>[]>;
    /**
     * Indicates if the user's profile is visible in the Google Workspace global address list when the contact sharing feature is enabled for the domain. Defaults to `true`.
     */
    includeInGlobalAddressList?: pulumi.Input<boolean>;
    /**
     * If true, the user's IP address is added to the allow list.
     */
    ipAllowlist?: pulumi.Input<boolean>;
    /**
     * Indicates a user with super admininistrator privileges.
     */
    isAdmin?: pulumi.Input<boolean>;
    /**
     * A list of the user's keywords. The maximum allowed data size is 1Kb.
     */
    keywords?: pulumi.Input<pulumi.Input<inputs.UserKeyword>[]>;
    /**
     * A list of the user's languages. The maximum allowed data size is 1Kb.
     */
    languages?: pulumi.Input<pulumi.Input<inputs.UserLanguage>[]>;
    /**
     * A list of the user's locations. The maximum allowed data size is 10Kb.
     */
    locations?: pulumi.Input<pulumi.Input<inputs.UserLocation>[]>;
    /**
     * Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
     */
    name?: pulumi.Input<inputs.UserName>;
    /**
     * The full path of the parent organization associated with the user. If the parent organization is the top-level, it is represented as a forward slash (/).
     */
    orgUnitPath?: pulumi.Input<string>;
    /**
     * A list of organizations the user belongs to. The maximum allowed data size is 10Kb.
     */
    organizations?: pulumi.Input<pulumi.Input<inputs.UserOrganization>[]>;
    /**
     * Stores the password for the user account. A password can contain any combination of ASCII characters. A minimum of 8 characters is required. The maximum length is 100 characters. As the API does not return the value of password, this field is write-only, and the value stored in the state will be what is provided in the configuration. The field is required on create and will be empty on import.
     */
    password?: pulumi.Input<string>;
    /**
     * Holds the given and family names of the user, and the read-only fullName value. The maximum number of characters in the givenName and in the familyName values is 60. In addition, name values support unicode/UTF-8 characters, and can contain spaces, letters (a-z), numbers (0-9), dashes (-), forward slashes (/), and periods (.). Maximum allowed data size for this field is 1Kb.
     */
    phones?: pulumi.Input<pulumi.Input<inputs.UserPhone>[]>;
    /**
     * A list of POSIX account information for the user.
     */
    posixAccounts?: pulumi.Input<pulumi.Input<inputs.UserPosixAccount>[]>;
    /**
     * The user's primary email address. The primaryEmail must be unique and cannot be an alias of another user.
     */
    primaryEmail: pulumi.Input<string>;
    /**
     * Recovery email of the user.
     */
    recoveryEmail?: pulumi.Input<string>;
    /**
     * Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212.
     */
    recoveryPhone?: pulumi.Input<string>;
    /**
     * A list of the user's relationships to other users. The maximum allowed data size for this field is 2Kb.
     */
    relations?: pulumi.Input<pulumi.Input<inputs.UserRelation>[]>;
    /**
     * A list of SSH public keys. The maximum allowed data size is 10Kb.
     */
    sshPublicKeys?: pulumi.Input<pulumi.Input<inputs.UserSshPublicKey>[]>;
    /**
     * Indicates if user is suspended.
     */
    suspended?: pulumi.Input<boolean>;
    /**
     * A list of the user's websites. The maximum allowed data size is 2Kb.
     */
    websites?: pulumi.Input<pulumi.Input<inputs.UserWebsite>[]>;
}
