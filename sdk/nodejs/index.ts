// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

// Export members:
export * from "./chromePolicy";
export * from "./getDomain";
export * from "./getDomainAlias";
export * from "./getGroup";
export * from "./getGroupMember";
export * from "./getGroupMembers";
export * from "./getGroupSettings";
export * from "./getOrgUnit";
export * from "./getPrivileges";
export * from "./getRole";
export * from "./getSchema";
export * from "./getUser";
export * from "./gmailSendAsAlias";
export * from "./orgUnit";
export * from "./provider";
export * from "./schema";
export * from "./user";

// Export sub-modules:
import * as config from "./config";
import * as domain from "./domain";
import * as group from "./group";
import * as role from "./role";
import * as types from "./types";

export {
    config,
    domain,
    group,
    role,
    types,
};

// Import resources to register:
import { ChromePolicy } from "./chromePolicy";
import { GmailSendAsAlias } from "./gmailSendAsAlias";
import { OrgUnit } from "./orgUnit";
import { Schema } from "./schema";
import { User } from "./user";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "googleworkspace:index/chromePolicy:ChromePolicy":
                return new ChromePolicy(name, <any>undefined, { urn })
            case "googleworkspace:index/gmailSendAsAlias:GmailSendAsAlias":
                return new GmailSendAsAlias(name, <any>undefined, { urn })
            case "googleworkspace:index/orgUnit:OrgUnit":
                return new OrgUnit(name, <any>undefined, { urn })
            case "googleworkspace:index/schema:Schema":
                return new Schema(name, <any>undefined, { urn })
            case "googleworkspace:index/user:User":
                return new User(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("googleWorkspace", "index/chromePolicy", _module)
pulumi.runtime.registerResourceModule("googleWorkspace", "index/gmailSendAsAlias", _module)
pulumi.runtime.registerResourceModule("googleWorkspace", "index/orgUnit", _module)
pulumi.runtime.registerResourceModule("googleWorkspace", "index/schema", _module)
pulumi.runtime.registerResourceModule("googleWorkspace", "index/user", _module)

import { Provider } from "./provider";

pulumi.runtime.registerResourcePackage("googleWorkspace", {
    version: utilities.getVersion(),
    constructProvider: (name: string, type: string, urn: string): pulumi.ProviderResource => {
        if (type !== "pulumi:providers:googleWorkspace") {
            throw new Error(`unknown provider type ${type}`);
        }
        return new Provider(name, <any>undefined, { urn });
    },
});
